<?php

namespace Proxies\__CG__\Partage\PartageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Atelier extends \Partage\PartageBundle\Entity\Atelier implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'id', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'nom', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'equipements', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'ingredients', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'tarif', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'available', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'user', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'participations', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'statut', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'photos'];
        }

        return ['__isInitialized__', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'id', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'nom', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'equipements', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'ingredients', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'tarif', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'available', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'user', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'participations', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'statut', '' . "\0" . 'Partage\\PartageBundle\\Entity\\Atelier' . "\0" . 'photos'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Atelier $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setEquipements($equipements)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEquipements', [$equipements]);

        return parent::setEquipements($equipements);
    }

    /**
     * {@inheritDoc}
     */
    public function getEquipements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEquipements', []);

        return parent::getEquipements();
    }

    /**
     * {@inheritDoc}
     */
    public function setIngredients($ingredients)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIngredients', [$ingredients]);

        return parent::setIngredients($ingredients);
    }

    /**
     * {@inheritDoc}
     */
    public function getIngredients()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIngredients', []);

        return parent::getIngredients();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarif($tarif)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarif', [$tarif]);

        return parent::setTarif($tarif);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarif', []);

        return parent::getTarif();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsers(\Partage\PartageBundle\Entity\Users $users = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsers', [$users]);

        return parent::setUsers($users);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Partage\PartageBundle\Entity\Users $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addAssisteAtelier(\Partage\PartageBundle\Entity\Users $assisteAtelier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAssisteAtelier', [$assisteAtelier]);

        return parent::addAssisteAtelier($assisteAtelier);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAssisteAtelier(\Partage\PartageBundle\Entity\Users $assisteAtelier)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAssisteAtelier', [$assisteAtelier]);

        return parent::removeAssisteAtelier($assisteAtelier);
    }

    /**
     * {@inheritDoc}
     */
    public function getAssisteAtelier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAssisteAtelier', []);

        return parent::getAssisteAtelier();
    }

    /**
     * {@inheritDoc}
     */
    public function setParticipation(\Partage\PartageBundle\Entity\Participation $participation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParticipation', [$participation]);

        return parent::setParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipation', []);

        return parent::getParticipation();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatut(\Partage\PartageBundle\Entity\StatutAtelier $statut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatut', [$statut]);

        return parent::addStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatut(\Partage\PartageBundle\Entity\StatutAtelier $statut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatut', [$statut]);

        return parent::removeStatut($statut);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatut', []);

        return parent::getStatut();
    }

    /**
     * {@inheritDoc}
     */
    public function addParticipation(\Partage\PartageBundle\Entity\Participation $participation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addParticipation', [$participation]);

        return parent::addParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeParticipation(\Partage\PartageBundle\Entity\Participation $participation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeParticipation', [$participation]);

        return parent::removeParticipation($participation);
    }

    /**
     * {@inheritDoc}
     */
    public function getParticipations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParticipations', []);

        return parent::getParticipations();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailable($available)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailable', [$available]);

        return parent::setAvailable($available);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailable', []);

        return parent::getAvailable();
    }

    /**
     * {@inheritDoc}
     */
    public function addPhoto(\Partage\PartageBundle\Entity\Photos $photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPhoto', [$photo]);

        return parent::addPhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function removePhoto(\Partage\PartageBundle\Entity\Photos $photo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePhoto', [$photo]);

        return parent::removePhoto($photo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhotos()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhotos', []);

        return parent::getPhotos();
    }

}
